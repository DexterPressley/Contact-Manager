swagger: '2.0'
info:
  description: This is the API documentation for the COP 4331 Contact Manager
  version: 1.0.0
  title: Contact Manager
  contact:
    email: de225789@ucf.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /Register.php:
    post:
      tags:
      - Users
      summary: Enrolls new user
      operationId: register
      description: Adds new user to Users database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: registrationItem
        description: Registration
        schema:
          $ref: '#/definitions/Registration'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /Login.php:
    post:
      tags:
      - Users
      summary: Logs into Contact Manager User account
      operationId: login
      description: Logs into Contact Manager User account
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginItem
        description: Login
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /AddContacts.php:
    post:
      tags:
      - Contacts
      summary: Adds a contact
      operationId: addContact
      description: Adds a contact to the user's contact list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: addItem
        description: Contact information to be added
        schema:
          $ref: '#/definitions/Add'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found 
        500:
          description: Server Error
  /SearchContacts.php:
    post:
      tags:
      - Contacts
      summary: Searches for contacts
      operationId: searchContacts
      description: Returns a list of Contacts associated with User.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: searchItem
        description: Search term and associated User
        schema:
          $ref: '#/definitions/Search'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found 
        500:
          description: Server Error
  /EditContacts.php:
    put:
      tags:
      - Contacts
      summary: Edit a contact
      operationId: editContacts
      description: Returns a list of Contacts associated with User.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: editItem
        description: Edited values for contact
        schema:
          $ref: '#/definitions/Edit'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found 
        500:
          description: Server Error
  /DeleteContacts.php:
    delete:
      tags:
      - Contacts
      summary: Delete a contact
      operationId: deleteContacts
      description: Remove Contact from User's contact list.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: deleteItem
        description: Qualifiers for deletion
        schema:
          $ref: '#/definitions/Delete'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found 
        500:
          description: Server Error

          
definitions:
  Registration:
    type: object
    required:
    - firstName
    - lastName
    - login
    - password
    properties:
      firstName:
        type: string
        example: "Tom"
      lastName:
        type: string
        example: "Jackson"
      login:
        type: string
        example: "tjack58"
      password:
        type: string
        example: "ThisIsNotAnIdealPassword123456!!!"
  Login:
    type: object
    required:
    - login
    - password
    properties:
      login:
        type: string
        example: "fred"
      password:
        type: string
        example: "secret"
  Add:
    type: object
    required:
    - userId
    - firstName
    - lastName
    - phone
    - email
    properties:
      userId:
        type: integer
        example: 1
      firstName:
        type: string
        example: "Tom"
      lastName:
        type: string
        example: "Jackson"
      phone:
        type: string
        example: "234-5678"
      email:
        type: string
        example: "Tom.Jackson@email.com"
  Search:
    type: object
    required:
    - search
    - userId
    properties:
      search:
        type: string
        example: "substringOfNamesOrPhoneOrEmail"
      userId:
        type: integer
        example: 1
  Edit:
    type: object
    required:
    - firstName
    - lastName
    - phone
    - email
    - Id
    properties:
      firstName:
        type: string
        example: "Tom"
      lastName:
        type: string
        example: "Jackson"
      phone:
        type: string
        example: "234-5678"
      email:
        type: string
        example: "Tom.Jackson@email.com"
      Id:
        type: integer
        example: 1
  Delete:
    type: object
    required:
    - firstName
    - lastName
    - userId
    properties:
      firstName:
        type: string
        example: "Tom"
      lastName:
        type: string
        example: "Jackson"
      userId:
        type: integer
        example: 1


host: barista-book.xyz
basePath: /LAMPAPI
schemes:
- http